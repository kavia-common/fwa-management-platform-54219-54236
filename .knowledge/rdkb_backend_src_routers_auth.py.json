{"is_source_file": true, "format": "Python", "description": "This Python source file defines API endpoints for authentication purposes using FastAPI. It includes routes for user login, registration (admin-only), and fetching the current user's profile.", "external_files": ["src/core/config", "src/core/database", "src/core/security", "src/dependencies/auth", "src/models/models", "src/schemas/auth", "src/schemas/common"], "external_methods": ["get_settings", "get_db", "create_access_token", "get_password_hash", "verify_password", "get_current_user", "require_admin"], "published": ["router"], "classes": [{"name": "Token", "description": "Schema for the JWT token response after login."}, {"name": "UserOut", "description": "Schema representing user details exposed externally."}], "methods": [{"name": "Token login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Authenticates a user with email and password, returns a JWT token.", "scope": "", "scopeKind": ""}, {"name": "UserOut register(user_in: UserCreate, db: Session = Depends(get_db), _: User = Depends(require_admin))", "description": "Registers a new user (admin-only endpoint).", "scope": "", "scopeKind": ""}, {"name": "UserOut me(current=Depends(get_current_user))", "description": "Returns the profile of the currently authenticated user.", "scope": "", "scopeKind": ""}], "calls": ["create_access_token", "verify_password", "get_password_hash", "db.query", "db.add", "db.commit", "db.refresh"], "search-terms": ["auth", "JWT", "login", "register", "get_current_user", "/auth", "OAuth2PasswordRequestForm", "User", "Token"], "state": 2, "file_id": 13, "knowledge_revision": 45, "git_revision": "1fef90b84e995cb419d09142612e737046ce64f8", "revision_history": [{"27": ""}, {"45": "1fef90b84e995cb419d09142612e737046ce64f8"}], "ctags": [{"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/fwa-management-platform-54219-54236/rdkb_backend/src/routers/auth.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)) -> To/", "language": "Python", "typeref": "typename:Token", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/fwa-management-platform-54219-54236/rdkb_backend/src/routers/auth.py", "pattern": "/^def me(current=Depends(get_current_user)) -> UserOut:$/", "language": "Python", "typeref": "typename:UserOut", "kind": "function", "signature": "(current=Depends(get_current_user))"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/fwa-management-platform-54219-54236/rdkb_backend/src/routers/auth.py", "pattern": "/^def register(user_in: UserCreate, db: Session = Depends(get_db), _: User = Depends(require_admin/", "language": "Python", "typeref": "typename:UserOut", "kind": "function", "signature": "(user_in: UserCreate, db: Session = Depends(get_db), _: User = Depends(require_admin))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/fwa-management-platform-54219-54236/rdkb_backend/src/routers/auth.py", "pattern": "/^router = APIRouter(prefix=\"\\/auth\", tags=[\"Authentication\"])$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "settings", "path": "/home/kavia/workspace/code-generation/fwa-management-platform-54219-54236/rdkb_backend/src/routers/auth.py", "pattern": "/^settings = get_settings()$/", "language": "Python", "kind": "variable"}], "hash": "a4dfd9477b1a9936b45abd0e5ea27ef8", "format-version": 4, "code-base-name": "rdkb_backend", "filename": "rdkb_backend/src/routers/auth.py", "fields": [{"name": "router = APIRouter(prefix=\"\\/auth\", tags=[\"Authentication\"])", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "settings = get_settings()", "scope": "", "scopeKind": "", "description": "unavailable"}]}